generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
  shadowDatabaseUrl = env("SHADOW_URL")
}

model Domains {
  domain    String   @id @unique
  userId    String
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model HitPage {
  id        String   @id @default(cuid())
  kyteId    String
  timestamp DateTime @default(now())
  referrer  String?
  country   String?
  ip        String?
  device    Device?
  KyteProd  KyteProd @relation(fields: [kyteId], references: [userId], onDelete: Cascade)
}

model HitLink {
  id        String   @id @default(cuid())
  kyteId    String
  timestamp DateTime @default(now())
  referrer  String?
  country   String?
  ip        String?
  device    Device?
  linkTitle String?
  linkURL   String?
  KyteProd  KyteProd @relation(fields: [kyteId], references: [userId], onDelete: Cascade)
}

model KyteDraft {
  userId         String   @id @unique
  email          String?  @unique
  createdAt      DateTime @default(now())
  username       String?  @unique
  name           String?
  description    String?
  pfp            String?
  theme          String?
  customFont     String?
  customColor    String?
  seoTitle       String?
  seoDescription String?
  links          Json?
  icons          Json?
  vcf            Json?
  redirectLink   String?
  shouldRedirect Boolean? @default(false)
  blurpfp        String?
  User           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model KyteProd {
  userId         String    @id
  email          String?   @unique
  createdAt      DateTime  @default(now())
  username       String?   @unique
  name           String?
  description    String?
  pfp            String?
  theme          String?
  customFont     String?
  customColor    String?
  seoTitle       String?
  seoDescription String?
  links          Json?
  icons          Json?
  vcf            Json?
  redirectLink   String?
  shouldRedirect Boolean?  @default(false)
  blurpfp        String?
  linkHits       HitLink[]
  pageHits       HitPage[]
  User           User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  legacy        Boolean?   @default(false)
  setup         Boolean?   @default(false)
  accounts      Account[]
  domains       Domains[]
  kyteDraft     KyteDraft?
  kyteProd      KyteProd?
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Device {
  MOBILE
  TABLET
  DESKTOP
  UNKNOWN
}
